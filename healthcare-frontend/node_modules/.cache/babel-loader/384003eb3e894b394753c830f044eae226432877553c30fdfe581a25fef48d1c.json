{"ast":null,"code":"var _jsxFileName = \"/home/kali/Music/timirda/healthcare-system/healthcare-frontend/src/context/PatientContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useAuth } from \"../hooks/useAuth\"; // Ensure useAuth is correctly set up\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientContext = /*#__PURE__*/createContext();\nexport const PatientProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    token\n  } = useAuth(); // Get auth token\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!token) return; // Prevent API call if no token\n\n    const fetchPatients = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/patients\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setPatients(response.data);\n      } catch (err) {\n        setError(\"Failed to fetch patients\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPatients();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(PatientContext.Provider, {\n    value: {\n      patients,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientProvider, \"Tj0zYtBjhxtIVfTe3aMVKVku2mI=\", false, function () {\n  return [useAuth];\n});\n_c = PatientProvider;\nexport const usePatients = () => {\n  _s2();\n  return React.useContext(PatientContext);\n};\n_s2(usePatients, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"PatientProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","axios","useAuth","jsxDEV","_jsxDEV","PatientContext","PatientProvider","children","_s","token","patients","setPatients","loading","setLoading","error","setError","fetchPatients","response","get","headers","Authorization","data","err","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","usePatients","_s2","useContext","$RefreshReg$"],"sources":["/home/kali/Music/timirda/healthcare-system/healthcare-frontend/src/context/PatientContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useAuth } from \"../hooks/useAuth\"; // Ensure useAuth is correctly set up\n\nconst PatientContext = createContext();\n\nexport const PatientProvider = ({ children }) => {\n  const { token } = useAuth(); // Get auth token\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!token) return; // Prevent API call if no token\n\n    const fetchPatients = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/patients\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setPatients(response.data);\n      } catch (err) {\n        setError(\"Failed to fetch patients\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPatients();\n  }, [token]);\n\n  return (\n    <PatientContext.Provider value={{ patients, loading, error }}>\n      {children}\n    </PatientContext.Provider>\n  );\n};\n\nexport const usePatients = () => React.useContext(PatientContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,gBAAGP,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMQ,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM;IAAEC;EAAM,CAAC,GAAGP,OAAO,CAAC,CAAC,CAAC,CAAC;EAC7B,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,KAAK,EAAE,OAAO,CAAC;;IAEpB,MAAMO,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,oCAAoC,EAAE;UACrEC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUX,KAAK;UAAG;QAC9C,CAAC,CAAC;QACFE,WAAW,CAACM,QAAQ,CAACI,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZP,QAAQ,CAAC,0BAA0B,CAAC;MACtC,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EAEX,oBACEL,OAAA,CAACC,cAAc,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEd,QAAQ;MAAEE,OAAO;MAAEE;IAAM,CAAE;IAAAP,QAAA,EAC1DA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAACpB,EAAA,CA9BWF,eAAe;EAAA,QACRJ,OAAO;AAAA;AAAA2B,EAAA,GADdvB,eAAe;AAgC5B,OAAO,MAAMwB,WAAW,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMlC,KAAK,CAACmC,UAAU,CAAC3B,cAAc,CAAC;AAAA;AAAC0B,GAAA,CAArDD,WAAW;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}