{"ast":null,"code":"var _jsxFileName = \"/home/kali/Music/timirda/healthcare-system/healthcare-frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Container, Form, Button, Table, Alert, Spinner, Pagination } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const patientsPerPage = 5; // Number of patients per page\n  const [newPatient, setNewPatient] = useState({\n    name: \"\",\n    age: \"\",\n    gender: \"\",\n    address: \"\",\n    contact: \"\",\n    wardNumber: \"\",\n    status: \"Admitted\"\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchPatients();\n  }, []);\n  const fetchPatients = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(\"http://localhost:5000/api/patients\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPatients(Array.isArray(response.data) ? response.data : []);\n    } catch (error) {\n      setError(\"Failed to fetch patients.\");\n    }\n    setLoading(false);\n  };\n  const registerPatient = async e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setError(null);\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.post(\"http://localhost:5000/api/patients/register\", newPatient, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessage(\"Patient registered successfully.\");\n      setNewPatient({\n        name: \"\",\n        age: \"\",\n        gender: \"\",\n        address: \"\",\n        contact: \"\",\n        wardNumber: \"\",\n        status: \"Admitted\"\n      });\n      fetchPatients();\n    } catch (error) {\n      setError(\"Failed to register patient.\");\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/\");\n  };\n\n  // Pagination logic\n  const indexOfLastPatient = currentPage * patientsPerPage;\n  const indexOfFirstPatient = indexOfLastPatient - patientsPerPage;\n  const currentPatients = patients.slice(indexOfFirstPatient, indexOfLastPatient);\n  const totalPages = Math.ceil(patients.length / patientsPerPage);\n  const handlePageChange = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"my-4\",\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"danger\",\n      onClick: handleLogout,\n      className: \"mb-3\",\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Register Patient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: registerPatient,\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: newPatient.name,\n          onChange: e => setNewPatient({\n            ...newPatient,\n            name: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          value: newPatient.age,\n          onChange: e => setNewPatient({\n            ...newPatient,\n            age: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          value: newPatient.gender,\n          onChange: e => setNewPatient({\n            ...newPatient,\n            gender: e.target.value\n          }),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Male\",\n            children: \"Male\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Female\",\n            children: \"Female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: newPatient.address,\n          onChange: e => setNewPatient({\n            ...newPatient,\n            address: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: newPatient.contact,\n          onChange: e => setNewPatient({\n            ...newPatient,\n            contact: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Ward Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: newPatient.wardNumber,\n          onChange: e => setNewPatient({\n            ...newPatient,\n            wardNumber: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          value: newPatient.status,\n          onChange: e => setNewPatient({\n            ...newPatient,\n            status: e.target.value\n          }),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Admitted\",\n            children: \"Admitted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Discharged\",\n            children: \"Discharged\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"mt-3\",\n        children: \"Register Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mt-4\",\n      children: \"All Patients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"table-dark\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Ward Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Bed Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Registered Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: currentPatients.length > 0 ? currentPatients.map((patient, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: indexOfFirstPatient + index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patient.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patient.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patient.gender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patient.contact\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patient.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patient.wardNumber || \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patient.bedNumber || \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: patient.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(patient.createdAt).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 21\n            }, this)]\n          }, patient._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"10\",\n              className: \"text-center\",\n              children: \"No patients found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n        className: \"justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(Pagination.Prev, {\n          onClick: () => handlePageChange(currentPage - 1),\n          disabled: currentPage === 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this), [...Array(totalPages)].map((_, index) => /*#__PURE__*/_jsxDEV(Pagination.Item, {\n          active: index + 1 === currentPage,\n          onClick: () => handlePageChange(index + 1),\n          children: index + 1\n        }, index + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(Pagination.Next, {\n          onClick: () => handlePageChange(currentPage + 1),\n          disabled: currentPage === totalPages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"1dsMnxiL5qku4x5aHZVBqq9WL00=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Form","Button","Table","Alert","Spinner","Pagination","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","patients","setPatients","loading","setLoading","error","setError","message","setMessage","currentPage","setCurrentPage","patientsPerPage","newPatient","setNewPatient","name","age","gender","address","contact","wardNumber","status","navigate","fetchPatients","token","localStorage","getItem","response","get","headers","Authorization","Array","isArray","data","registerPatient","e","preventDefault","post","handleLogout","removeItem","indexOfLastPatient","indexOfFirstPatient","currentPatients","slice","totalPages","Math","ceil","length","handlePageChange","pageNumber","children","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","onSubmit","Group","Label","Control","type","value","onChange","target","required","as","animation","striped","bordered","hover","map","patient","index","bedNumber","Date","createdAt","toLocaleString","_id","colSpan","Prev","disabled","_","Item","active","Next","_c","$RefreshReg$"],"sources":["/home/kali/Music/timirda/healthcare-system/healthcare-frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Container, Form, Button, Table, Alert, Spinner, Pagination } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Dashboard = () => {\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const patientsPerPage = 5; // Number of patients per page\n  const [newPatient, setNewPatient] = useState({\n    name: \"\",\n    age: \"\",\n    gender: \"\",\n    address: \"\",\n    contact: \"\",\n    wardNumber: \"\",\n    status: \"Admitted\",\n  });\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchPatients();\n  }, []);\n\n  const fetchPatients = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(\"http://localhost:5000/api/patients\", {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setPatients(Array.isArray(response.data) ? response.data : []);\n    } catch (error) {\n      setError(\"Failed to fetch patients.\");\n    }\n    setLoading(false);\n  };\n\n  const registerPatient = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n    setError(null);\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.post(\"http://localhost:5000/api/patients/register\", newPatient, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setMessage(\"Patient registered successfully.\");\n      setNewPatient({ name: \"\", age: \"\", gender: \"\", address: \"\", contact: \"\", wardNumber: \"\", status: \"Admitted\" });\n      fetchPatients();\n    } catch (error) {\n      setError(\"Failed to register patient.\");\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/\");\n  };\n\n  // Pagination logic\n  const indexOfLastPatient = currentPage * patientsPerPage;\n  const indexOfFirstPatient = indexOfLastPatient - patientsPerPage;\n  const currentPatients = patients.slice(indexOfFirstPatient, indexOfLastPatient);\n\n  const totalPages = Math.ceil(patients.length / patientsPerPage);\n\n  const handlePageChange = (pageNumber) => setCurrentPage(pageNumber);\n\n  return (\n    <Container>\n      <h2 className=\"my-4\">Admin Dashboard</h2>\n      <Button variant=\"danger\" onClick={handleLogout} className=\"mb-3\">\n        Logout\n      </Button>\n      {message && <Alert variant=\"success\">{message}</Alert>}\n      {error && <Alert variant=\"danger\">{error}</Alert>}\n\n      {/* Register Patient Form */}\n      <h4>Register Patient</h4>\n      <Form onSubmit={registerPatient} className=\"mb-4\">\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={newPatient.name}\n            onChange={(e) => setNewPatient({ ...newPatient, name: e.target.value })}\n            required\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Age</Form.Label>\n          <Form.Control\n            type=\"number\"\n            value={newPatient.age}\n            onChange={(e) => setNewPatient({ ...newPatient, age: e.target.value })}\n            required\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Gender</Form.Label>\n          <Form.Control\n            as=\"select\"\n            value={newPatient.gender}\n            onChange={(e) => setNewPatient({ ...newPatient, gender: e.target.value })}\n            required\n          >\n            <option value=\"\">Select</option>\n            <option value=\"Male\">Male</option>\n            <option value=\"Female\">Female</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={newPatient.address}\n            onChange={(e) => setNewPatient({ ...newPatient, address: e.target.value })}\n            required\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Contact</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={newPatient.contact}\n            onChange={(e) => setNewPatient({ ...newPatient, contact: e.target.value })}\n            required\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Ward Number</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={newPatient.wardNumber}\n            onChange={(e) => setNewPatient({ ...newPatient, wardNumber: e.target.value })}\n            required\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Status</Form.Label>\n          <Form.Control\n            as=\"select\"\n            value={newPatient.status}\n            onChange={(e) => setNewPatient({ ...newPatient, status: e.target.value })}\n            required\n          >\n            <option value=\"Admitted\">Admitted</option>\n            <option value=\"Discharged\">Discharged</option>\n          </Form.Control>\n        </Form.Group>\n        <Button type=\"submit\" className=\"mt-3\">\n          Register Patient\n        </Button>\n      </Form>\n\n      {/* Patients Table with Pagination */}\n      <h4 className=\"mt-4\">All Patients</h4>\n      {loading ? (\n        <Spinner animation=\"border\" />\n      ) : (\n        <>\n          <Table striped bordered hover className=\"mt-3\">\n            <thead className=\"table-dark\">\n              <tr>\n                <th>#</th>\n                <th>Name</th>\n                <th>Age</th>\n                <th>Gender</th>\n                <th>Contact</th>\n                <th>Address</th>\n                <th>Ward Number</th>\n                <th>Bed Number</th>\n                <th>Status</th>\n                <th>Registered Date</th>\n              </tr>\n            </thead>\n            <tbody>\n              {currentPatients.length > 0 ? (\n                currentPatients.map((patient, index) => (\n                  <tr key={patient._id}>\n                    <td>{indexOfFirstPatient + index + 1}</td>\n                    <td>{patient.name}</td>\n                    <td>{patient.age}</td>\n                    <td>{patient.gender}</td>\n                    <td>{patient.contact}</td>\n                    <td>{patient.address}</td>\n                    <td>{patient.wardNumber || \"N/A\"}</td>\n                    <td>{patient.bedNumber || \"N/A\"}</td>\n                    <td>{patient.status}</td>\n                    <td>{new Date(patient.createdAt).toLocaleString()}</td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"10\" className=\"text-center\">\n                    No patients found\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n\n          {/* Pagination Controls */}\n          {totalPages > 1 && (\n            <Pagination className=\"justify-content-center\">\n              <Pagination.Prev\n                onClick={() => handlePageChange(currentPage - 1)}\n                disabled={currentPage === 1}\n              />\n              {[...Array(totalPages)].map((_, index) => (\n                <Pagination.Item\n                  key={index + 1}\n                  active={index + 1 === currentPage}\n                  onClick={() => handlePageChange(index + 1)}\n                >\n                  {index + 1}\n                </Pagination.Item>\n              ))}\n              <Pagination.Next\n                onClick={() => handlePageChange(currentPage + 1)}\n                disabled={currentPage === totalPages}\n              />\n            </Pagination>\n          )}\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}