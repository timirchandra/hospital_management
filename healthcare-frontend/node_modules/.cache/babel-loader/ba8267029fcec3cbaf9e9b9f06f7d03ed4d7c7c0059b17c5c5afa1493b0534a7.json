{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  try {\n    const response = await loginUser(credentials);\n    console.log(\"Login Response:\", response); // Debugging line\n    localStorage.setItem(\"token\", response.token);\n    localStorage.setItem(\"role\", response.role); // Save role in localStorage\n\n    if (response.role === \"Doctor\") {\n      navigate(\"/doctor-dashboard\"); // Redirect to Doctor Dashboard\n    } else {\n      navigate(\"/dashboard\"); // Redirect other users to Dashboard\n    }\n  } catch (err) {\n    setError(err.message || \"Invalid credentials\");\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","response","loginUser","credentials","console","log","localStorage","setItem","token","role","navigate","err","setError","message"],"sources":["/home/kali/Music/timirda/healthcare-system/healthcare-frontend/src/pages/Login.jsx"],"sourcesContent":["const handleSubmit = async (e) => {\n  e.preventDefault();\n  try {\n    const response = await loginUser(credentials);\n    console.log(\"Login Response:\", response); // Debugging line\n    localStorage.setItem(\"token\", response.token);\n    localStorage.setItem(\"role\", response.role); // Save role in localStorage\n\n    if (response.role === \"Doctor\") {\n      navigate(\"/doctor-dashboard\");  // Redirect to Doctor Dashboard\n    } else {\n      navigate(\"/dashboard\");  // Redirect other users to Dashboard\n    }\n  } catch (err) {\n    setError(err.message || \"Invalid credentials\");\n  }\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,SAAS,CAACC,WAAW,CAAC;IAC7CC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEJ,QAAQ,CAAC,CAAC,CAAC;IAC1CK,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEN,QAAQ,CAACO,KAAK,CAAC;IAC7CF,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEN,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC;;IAE7C,IAAIR,QAAQ,CAACQ,IAAI,KAAK,QAAQ,EAAE;MAC9BC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,CAAE;IAClC,CAAC,MAAM;MACLA,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAE;IAC3B;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,QAAQ,CAACD,GAAG,CAACE,OAAO,IAAI,qBAAqB,CAAC;EAChD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}