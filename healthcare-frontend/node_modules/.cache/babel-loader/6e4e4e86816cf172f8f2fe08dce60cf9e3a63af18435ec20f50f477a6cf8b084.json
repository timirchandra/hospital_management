{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000/api\";\n\n// Register API\nexport const registerUser = async userData => {\n  try {\n    console.log(\"Sending registration data:\", userData); // Debugging\n\n    const response = await axios.post(`${API_BASE_URL}/auth/register`, userData, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(\"Registration success:\", response.data); // Debugging\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error(\"Registration failed:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || \"Registration failed\";\n  }\n};\n\n// Login User\nexport const loginUser = async credentials => {\n  try {\n    var _response$data;\n    const response = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\n    if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.token) {\n      localStorage.setItem(\"token\", response.data.token); // Save token securely\n    }\n    return response.data; // Returns { token, user }\n  } catch (error) {\n    handleError(error);\n  }\n};\n\n// Get User Profile\nexport const getUserProfile = async () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    if (!token) throw new Error(\"Unauthorized\");\n    const response = await axios.get(`${API_BASE_URL}/auth/profile`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data; // Returns user profile data\n  } catch (error) {\n    handleError(error);\n  }\n};\n\n// Logout User\nexport const logoutUser = () => {\n  localStorage.removeItem(\"token\");\n  window.location.href = \"/\"; // Redirect to home after logout\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","registerUser","userData","console","log","response","post","headers","data","error","_error$response","_error$response2","message","loginUser","credentials","_response$data","token","localStorage","setItem","handleError","getUserProfile","getItem","Error","get","Authorization","logoutUser","removeItem","window","location","href"],"sources":["/home/kali/Music/timirda/healthcare-system/healthcare-frontend/src/services/authService.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000/api\";\n\n// Register API\nexport const registerUser = async (userData) => {\n  try {\n    console.log(\"Sending registration data:\", userData); // Debugging\n\n    const response = await axios.post(`${API_BASE_URL}/auth/register`, userData, {\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n\n    console.log(\"Registration success:\", response.data); // Debugging\n    return response.data;\n  } catch (error) {\n    console.error(\"Registration failed:\", error.response?.data || error.message);\n    throw error.response?.data || \"Registration failed\";\n  }\n};\n\n\n\n// Login User\nexport const loginUser = async (credentials) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\n    \n    if (response.data?.token) {\n      localStorage.setItem(\"token\", response.data.token); // Save token securely\n    }\n\n    return response.data; // Returns { token, user }\n  } catch (error) {\n    handleError(error);\n  }\n};\n\n// Get User Profile\nexport const getUserProfile = async () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    if (!token) throw new Error(\"Unauthorized\");\n\n    const response = await axios.get(`${API_BASE_URL}/auth/profile`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return response.data; // Returns user profile data\n  } catch (error) {\n    handleError(error);\n  }\n};\n\n// Logout User\nexport const logoutUser = () => {\n  localStorage.removeItem(\"token\");\n  window.location.href = \"/\"; // Redirect to home after logout\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,2BAA2B;;AAEtF;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,QAAQ,CAAC,CAAC,CAAC;;IAErD,MAAMG,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,GAAGT,YAAY,gBAAgB,EAAEK,QAAQ,EAAE;MAC3EK,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;IAEFJ,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;IACrD,OAAOH,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,gBAAA;IACdR,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACJ,QAAQ,cAAAK,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;IAC5E,MAAM,EAAAD,gBAAA,GAAAF,KAAK,CAACJ,QAAQ,cAAAM,gBAAA,uBAAdA,gBAAA,CAAgBH,IAAI,KAAI,qBAAqB;EACrD;AACF,CAAC;;AAID;AACA,OAAO,MAAMK,SAAS,GAAG,MAAOC,WAAW,IAAK;EAC9C,IAAI;IAAA,IAAAC,cAAA;IACF,MAAMV,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,GAAGT,YAAY,aAAa,EAAEiB,WAAW,CAAC;IAE5E,KAAAC,cAAA,GAAIV,QAAQ,CAACG,IAAI,cAAAO,cAAA,eAAbA,cAAA,CAAeC,KAAK,EAAE;MACxBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEb,QAAQ,CAACG,IAAI,CAACQ,KAAK,CAAC,CAAC,CAAC;IACtD;IAEA,OAAOX,QAAQ,CAACG,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdU,WAAW,CAACV,KAAK,CAAC;EACpB;AACF,CAAC;;AAED;AACA,OAAO,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMJ,KAAK,GAAGC,YAAY,CAACI,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACL,KAAK,EAAE,MAAM,IAAIM,KAAK,CAAC,cAAc,CAAC;IAE3C,MAAMjB,QAAQ,GAAG,MAAMT,KAAK,CAAC2B,GAAG,CAAC,GAAG1B,YAAY,eAAe,EAAE;MAC/DU,OAAO,EAAE;QAAEiB,aAAa,EAAE,UAAUR,KAAK;MAAG;IAC9C,CAAC,CAAC;IAEF,OAAOX,QAAQ,CAACG,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdU,WAAW,CAACV,KAAK,CAAC;EACpB;AACF,CAAC;;AAED;AACA,OAAO,MAAMgB,UAAU,GAAGA,CAAA,KAAM;EAC9BR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;EAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG,CAAC,CAAC;AAC9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}