{"ast":null,"code":"import axios from\"axios\";import API_BASE_URL from\"../config\";// Register User\nexport const registerUser=async userData=>{try{const response=await axios.post(`${API_BASE_URL}/auth/register`,userData);return response.data;// Returns success message or user data\n}catch(error){throw error.response?error.response.data:new Error(\"Registration failed\");}};// Login User\nexport const loginUser=async credentials=>{try{const response=await axios.post(`${API_BASE_URL}/auth/login`,credentials);return response.data;// Returns token and user data\n}catch(error){throw error.response?error.response.data:new Error(\"Login failed\");}};// Get User Profile\nexport const getUserProfile=async()=>{try{const token=localStorage.getItem(\"token\");if(!token)throw new Error(\"Unauthorized\");const response=await axios.get(`${API_BASE_URL}/auth/profile`,{headers:{Authorization:`Bearer ${token}`}});return response.data;// Returns user profile data\n}catch(error){throw error.response?error.response.data:new Error(\"Failed to fetch profile\");}};// Logout User\nexport const logoutUser=()=>{localStorage.removeItem(\"token\");};","map":{"version":3,"names":["axios","API_BASE_URL","registerUser","userData","response","post","data","error","Error","loginUser","credentials","getUserProfile","token","localStorage","getItem","get","headers","Authorization","logoutUser","removeItem"],"sources":["/home/kali/Music/timirda/healthcare-system/healthcare-frontend/src/services/authService.js"],"sourcesContent":["import axios from \"axios\";\nimport API_BASE_URL from \"../config\";\n\n// Register User\nexport const registerUser = async (userData) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/auth/register`, userData);\n    return response.data; // Returns success message or user data\n  } catch (error) {\n    throw error.response ? error.response.data : new Error(\"Registration failed\");\n  }\n};\n\n// Login User\nexport const loginUser = async (credentials) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\n    return response.data; // Returns token and user data\n  } catch (error) {\n    throw error.response ? error.response.data : new Error(\"Login failed\");\n  }\n};\n\n// Get User Profile\nexport const getUserProfile = async () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    if (!token) throw new Error(\"Unauthorized\");\n\n    const response = await axios.get(`${API_BASE_URL}/auth/profile`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return response.data; // Returns user profile data\n  } catch (error) {\n    throw error.response ? error.response.data : new Error(\"Failed to fetch profile\");\n  }\n};\n\n// Logout User\nexport const logoutUser = () => {\n  localStorage.removeItem(\"token\");\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,YAAY,KAAM,WAAW,CAEpC;AACA,MAAO,MAAM,CAAAC,YAAY,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAC9C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,gBAAgB,CAAEE,QAAQ,CAAC,CAC5E,MAAO,CAAAC,QAAQ,CAACE,IAAI,CAAE;AACxB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CAACH,QAAQ,CAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAG,GAAI,CAAAE,KAAK,CAAC,qBAAqB,CAAC,CAC/E,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,SAAS,CAAG,KAAO,CAAAC,WAAW,EAAK,CAC9C,GAAI,CACF,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,aAAa,CAAES,WAAW,CAAC,CAC5E,MAAO,CAAAN,QAAQ,CAACE,IAAI,CAAE;AACxB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CAACH,QAAQ,CAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAG,GAAI,CAAAE,KAAK,CAAC,cAAc,CAAC,CACxE,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAG,cAAc,CAAG,KAAAA,CAAA,GAAY,CACxC,GAAI,CACF,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAI,CAACF,KAAK,CAAE,KAAM,IAAI,CAAAJ,KAAK,CAAC,cAAc,CAAC,CAE3C,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACe,GAAG,CAAC,GAAGd,YAAY,eAAe,CAAE,CAC/De,OAAO,CAAE,CAAEC,aAAa,CAAE,UAAUL,KAAK,EAAG,CAC9C,CAAC,CAAC,CAEF,MAAO,CAAAR,QAAQ,CAACE,IAAI,CAAE;AACxB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CAACH,QAAQ,CAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAG,GAAI,CAAAE,KAAK,CAAC,yBAAyB,CAAC,CACnF,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAU,UAAU,CAAGA,CAAA,GAAM,CAC9BL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC,CAClC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}